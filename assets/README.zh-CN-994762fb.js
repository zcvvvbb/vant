import{_ as t}from"./locales-f9abcc45.js";import{o as s,a,z as n}from"./vue-libs-19c20d28.js";const d={},e={class:"van-doc-markdown-body"},l=n(`<h1>Pagination 分页</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>数据量过多时，采用分页的形式将数据分隔，每次只加载一个页面。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;
<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Pagination</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;

<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();
app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Pagination</span>);
</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>通过 <code>v-model</code> 来绑定当前页码。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pagination</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span> <span class="hljs-attr">:total-items</span>=<span class="hljs-string">&quot;24&quot;</span> <span class="hljs-attr">:items-per-page</span>=<span class="hljs-string">&quot;5&quot;</span> /&gt;</span>
</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">const</span> currentPage = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>);
    <span class="hljs-keyword">return</span> { currentPage };
  },
};
</code></pre></div><div class="van-doc-card"><h3 id="jian-dan-mo-shi" tabindex="-1">简单模式</h3><p>将 <code>mode</code> 设置为 <code>simple</code> 来切换到简单模式，此时分页器不会展示具体的页码按钮。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pagination</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span> <span class="hljs-attr">:page-count</span>=<span class="hljs-string">&quot;12&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;simple&quot;</span> /&gt;</span>
</code></pre></div><div class="van-doc-card"><h3 id="xian-shi-sheng-lue-hao" tabindex="-1">显示省略号</h3><p>设置 <code>force-ellipses</code> 后会展示省略号按钮，点击后可以快速跳转。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pagination</span>
  <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span>
  <span class="hljs-attr">:total-items</span>=<span class="hljs-string">&quot;125&quot;</span>
  <span class="hljs-attr">:show-page-size</span>=<span class="hljs-string">&quot;3&quot;</span>
  <span class="hljs-attr">force-ellipses</span>
/&gt;</span>
</code></pre></div><div class="van-doc-card"><h3 id="zi-ding-yi-an-niu" tabindex="-1">自定义按钮</h3><p>通过 <code>prev-text</code>、<code>next-text</code> 等插槽来自定义分页按钮的内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-pagination</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;currentPage&quot;</span> <span class="hljs-attr">:total-items</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">:show-page-size</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">prev-text</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;arrow-left&quot;</span> /&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">next-text</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;arrow&quot;</span> /&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">page</span>=<span class="hljs-string">&quot;{ text }&quot;</span>&gt;</span>{{ text }}<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">van-pagination</span>&gt;</span>
</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>v-model</td><td>当前页码</td><td><em>number</em></td><td>-</td></tr><tr><td>mode</td><td>显示模式，可选值为 <code>simple</code></td><td><em>string</em></td><td><code>multi</code></td></tr><tr><td>prev-text</td><td>上一页按钮文字</td><td><em>string</em></td><td><code>上一页</code></td></tr><tr><td>next-text</td><td>下一页按钮文字</td><td><em>string</em></td><td><code>下一页</code></td></tr><tr><td>page-count</td><td>总页数</td><td><em>number | string</em></td><td>根据页数计算</td></tr><tr><td>total-items</td><td>总记录数</td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>items-per-page</td><td>每页记录数</td><td><em>number | string</em></td><td><code>10</code></td></tr><tr><td>show-page-size</td><td>显示的页码个数</td><td><em>number | string</em></td><td><code>5</code></td></tr><tr><td>force-ellipses</td><td>是否显示省略号</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-prev-button <code>v4.2.1</code></td><td>是否展示上一页按钮</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-next-button <code>v4.2.1</code></td><td>是否展示下一页按钮</td><td><em>boolean</em></td><td><code>true</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>页码改变时触发</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>描述</th><th>参数</th></tr></thead><tbody><tr><td>page</td><td>自定义页码</td><td><em>{ number: number, text: string, active: boolean }</em></td></tr><tr><td>prev-text</td><td>自定义上一页按钮文字</td><td>-</td></tr><tr><td>next-text</td><td>自定义下一页按钮文字</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">PaginationMode</span>, <span class="hljs-title class_">PaginationProps</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;
</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider" target="_blank">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>--van-pagination-height</td><td><em>40px</em></td><td>-</td></tr><tr><td>--van-pagination-font-size</td><td><em>var(--van-font-size-md)</em></td><td>-</td></tr><tr><td>--van-pagination-item-width</td><td><em>36px</em></td><td>-</td></tr><tr><td>--van-pagination-item-default-color</td><td><em>var(--van-primary-color)</em></td><td>-</td></tr><tr><td>--van-pagination-item-disabled-color</td><td><em>var(--van-gray-7)</em></td><td>-</td></tr><tr><td>--van-pagination-item-disabled-background</td><td><em>var(--van-background)</em></td><td>-</td></tr><tr><td>--van-pagination-background</td><td><em>var(--van-background-2)</em></td><td>-</td></tr><tr><td>--van-pagination-desc-color</td><td><em>var(--van-gray-7)</em></td><td>-</td></tr><tr><td>--van-pagination-disabled-opacity</td><td><em>var(--van-disabled-opacity)</em></td><td>-</td></tr></tbody></table></div>`,15),p=[l];function c(r,o){return s(),a("div",e,p)}const g=t(d,[["render",c]]);export{g as default};
