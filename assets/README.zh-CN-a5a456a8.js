import{_ as s}from"./locales-f9abcc45.js";import{o as a,a as t,z as n}from"./vue-libs-19c20d28.js";const e={},d={class:"van-doc-markdown-body"},l=n(`<h1>Image 图片</h1><div class="van-doc-card"><h3 id="jie-shao" tabindex="-1">介绍</h3><p>增强版的 img 标签，提供多种图片填充模式，支持图片懒加载、加载中提示、加载失败提示。</p></div><div class="van-doc-card"><h3 id="yin-ru" tabindex="-1">引入</h3><p>通过以下方式来全局注册组件，更多注册方式请参考<a href="#/zh-CN/advanced-usage#zu-jian-zhu-ce" target="_blank">组件注册</a>。</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;
<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Image</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">VanImage</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;

<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();
app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">VanImage</span>);
</code></pre></div><h2 id="dai-ma-yan-shi" tabindex="-1">代码演示</h2><div class="van-doc-card"><h3 id="ji-chu-yong-fa" tabindex="-1">基础用法</h3><p>基础用法与原生 <code>img</code> 标签一致，可以设置 <code>src</code>、<code>width</code>、<code>height</code>、<code>alt</code> 等原生属性。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span>
  <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100&quot;</span>
  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100&quot;</span>
  <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg&quot;</span>
/&gt;</span>
</code></pre></div><div class="van-doc-card"><h3 id="tian-chong-mo-shi" tabindex="-1">填充模式</h3><p>通过 <code>fit</code> 属性可以设置图片填充模式，等同于原生的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/object-fit" target="_blank">object-fit</a> 属性，可选值见下方表格。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span>
  <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;10rem&quot;</span>
  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;10rem&quot;</span>
  <span class="hljs-attr">fit</span>=<span class="hljs-string">&quot;contain&quot;</span>
  <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg&quot;</span>
/&gt;</span>
</code></pre></div><div class="van-doc-card"><h3 id="tu-pian-wei-zhi" tabindex="-1">图片位置</h3><p>通过 <code>position</code> 属性可以设置图片位置，结合 <code>fit</code> 属性使用，等同于原生的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/object-position" target="_blank">object-position</a> 属性。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span>
  <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;10rem&quot;</span>
  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;10rem&quot;</span>
  <span class="hljs-attr">fit</span>=<span class="hljs-string">&quot;cover&quot;</span>
  <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;left&quot;</span>
  <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg&quot;</span>
/&gt;</span>
</code></pre></div><div class="van-doc-card"><h3 id="yuan-xing-tu-pian" tabindex="-1">圆形图片</h3><p>通过 <code>round</code> 属性可以设置图片变圆，注意当图片宽高不相等且 <code>fit</code> 为 <code>contain</code> 或 <code>scale-down</code> 时，将无法填充一个完整的圆形。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span>
  <span class="hljs-attr">round</span>
  <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;10rem&quot;</span>
  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;10rem&quot;</span>
  <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg&quot;</span>
/&gt;</span>
</code></pre></div><div class="van-doc-card"><h3 id="tu-pian-lan-jia-zai" tabindex="-1">图片懒加载</h3><p>设置 <code>lazy-load</code> 属性来开启图片懒加载，需要搭配 <a href="#/zh-CN/lazyload" target="_blank">Lazyload</a> 组件使用。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span>
  <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100&quot;</span>
  <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100&quot;</span>
  <span class="hljs-attr">lazy-load</span>
  <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg&quot;</span>
/&gt;</span>
</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;
<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Lazyload</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;

<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>();
app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">Lazyload</span>);
</code></pre></div><div class="van-doc-card"><h3 id="jia-zai-zhong-ti-shi" tabindex="-1">加载中提示</h3><p><code>Image</code> 组件提供了默认的加载中提示，支持通过 <code>loading</code> 插槽自定义内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:loading</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">van-loading</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;spinner&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;20&quot;</span> /&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">van-image</span>&gt;</span>
</code></pre></div><div class="van-doc-card"><h3 id="jia-zai-shi-bai-ti-shi" tabindex="-1">加载失败提示</h3><p><code>Image</code> 组件提供了默认的加载失败提示，支持通过 <code>error</code> 插槽自定义内容。</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://fastly.jsdelivr.net/npm/@vant/assets/cat.jpeg&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot:error</span>&gt;</span>加载失败<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">van-image</span>&gt;</span>
</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="props" tabindex="-1">Props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>src</td><td>图片链接</td><td><em>string</em></td><td>-</td></tr><tr><td>fit</td><td>图片填充模式，等同于原生的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/object-fit" target="_blank">object-fit</a> 属性</td><td><em>string</em></td><td><code>fill</code></td></tr><tr><td>position</td><td>图片位置，等同于原生的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/object-position" target="_blank">object-position</a> 属性，可选值为 <code>top</code> <code>right</code> <code>bottom</code> <code>left</code> 或 <code>string</code></td><td><em>string</em></td><td><code>center</code></td></tr><tr><td>alt</td><td>替代文本</td><td><em>string</em></td><td>-</td></tr><tr><td>width</td><td>宽度，默认单位为 <code>px</code></td><td><em>number | string</em></td><td>-</td></tr><tr><td>height</td><td>高度，默认单位为 <code>px</code></td><td><em>number | string</em></td><td>-</td></tr><tr><td>radius</td><td>圆角大小，默认单位为 <code>px</code></td><td><em>number | string</em></td><td><code>0</code></td></tr><tr><td>round</td><td>是否显示为圆形</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>block <code>3.6.3</code></td><td>是否将根节点设置为块级元素，默认情况下为 <code>inline-block</code> 元素</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>lazy-load</td><td>是否开启图片懒加载，须配合 <a href="#/zh-CN/lazyload" target="_blank">Lazyload</a> 组件使用</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>show-error</td><td>是否展示图片加载失败提示</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>show-loading</td><td>是否展示图片加载中提示</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td>error-icon</td><td>失败时提示的图标名称或图片链接，等同于 Icon 组件的 <a href="#/zh-CN/icon#props" target="_blank">name 属性</a></td><td><em>string</em></td><td><code>photo-fail</code></td></tr><tr><td>loading-icon</td><td>加载时提示的图标名称或图片链接，等同于 Icon 组件的 <a href="#/zh-CN/icon#props" target="_blank">name 属性</a></td><td><em>string</em></td><td><code>photo</code></td></tr><tr><td>icon-size</td><td>加载图标和失败图标的大小</td><td><em>number | string</em></td><td><code>32px</code></td></tr><tr><td>icon-prefix</td><td>图标类名前缀，等同于 Icon 组件的 <a href="#/zh-CN/icon#props" target="_blank">class-prefix 属性</a></td><td><em>string</em></td><td><code>van-icon</code></td></tr></tbody></table></div><div class="van-doc-card"><h3 id="tu-pian-tian-chong-mo-shi" tabindex="-1">图片填充模式</h3><table><thead><tr><th>名称</th><th>含义</th></tr></thead><tbody><tr><td>contain</td><td>保持宽高缩放图片，使图片的长边能完全显示出来</td></tr><tr><td>cover</td><td>保持宽高缩放图片，使图片的短边能完全显示出来，裁剪长边</td></tr><tr><td>fill</td><td>拉伸图片，使图片填满元素</td></tr><tr><td>none</td><td>保持图片原有尺寸</td></tr><tr><td>scale-down</td><td>取 <code>none</code> 或 <code>contain</code> 中较小的一个</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="events" tabindex="-1">Events</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>click</td><td>点击图片时触发</td><td><em>event: MouseEvent</em></td></tr><tr><td>load</td><td>图片加载完毕时触发</td><td><em>event: Event</em></td></tr><tr><td>error</td><td>图片加载失败时触发</td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="slots" tabindex="-1">Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>自定义图片下方的内容</td></tr><tr><td>loading</td><td>自定义加载中的提示内容</td></tr><tr><td>error</td><td>自定义加载失败时的提示内容</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="lei-xing-ding-yi" tabindex="-1">类型定义</h3><p>组件导出以下类型定义：</p><pre><code class="language-ts"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> { <span class="hljs-title class_">ImageFit</span>, <span class="hljs-title class_">ImagePosition</span>, <span class="hljs-title class_">ImageProps</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;
</code></pre></div><h2 id="zhu-ti-ding-zhi" tabindex="-1">主题定制</h2><div class="van-doc-card"><h3 id="yang-shi-bian-liang" tabindex="-1">样式变量</h3><p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考 <a href="#/zh-CN/config-provider" target="_blank">ConfigProvider 组件</a>。</p><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>--van-image-placeholder-text-color</td><td><em>var(--van-text-color-2)</em></td><td>-</td></tr><tr><td>--van-image-placeholder-font-size</td><td><em>var(--van-font-size-md)</em></td><td>-</td></tr><tr><td>--van-image-placeholder-background</td><td><em>var(--van-background)</em></td><td>-</td></tr><tr><td>--van-image-loading-icon-size</td><td><em>32px</em></td><td>-</td></tr><tr><td>--van-image-loading-icon-color</td><td><em>var(--van-gray-4)</em></td><td>-</td></tr><tr><td>--van-image-error-icon-size</td><td><em>32px</em></td><td>-</td></tr><tr><td>--van-image-error-icon-color</td><td><em>var(--van-gray-4)</em></td><td>-</td></tr></tbody></table></div><h2 id="chang-jian-wen-ti" tabindex="-1">常见问题</h2><div class="van-doc-card"><h3 id="ru-he-yin-yong-ben-di-tu-pian" tabindex="-1">如何引用本地图片？</h3><p>在 .vue 文件中通过相对路径引用本地图片时，需要在图片的链接外包上一层 <code>require()</code>，将图片 URL 转换为 webpack 模块请求，并结合 <a href="https://github.com/webpack-contrib/file-loader" target="_blank">file-loader</a> 或者 <a href="https://github.com/webpack-contrib/url-loader" target="_blank">url-loader</a> 进行处理。</p><pre><code class="language-html"><span class="hljs-comment">&lt;!-- 错误写法 --&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./image.png&quot;</span> /&gt;</span>

<span class="hljs-comment">&lt;!-- 正确写法 --&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">van-image</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;require(&#39;./image.png&#39;)&quot;</span> /&gt;</span>
</code></pre><blockquote><p>对此更详细的解释可以参考 vue-loader 的<a href="https://vue-loader.vuejs.org/zh/guide/asset-url.html" target="_blank">处理资源路径</a>章节。</p></blockquote></div><div class="van-doc-card"><h3 id="shi-yong-image-biao-qian-wu-fa-xuan-ran" tabindex="-1">使用 image 标签无法渲染？</h3><p>使用 Image 组件时，可能会遇到将 &lt;image&gt; 作为标签名时无法渲染的问题，比如下面的写法：</p><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;xxx&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>

<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">
<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Image</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vant&#39;</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
  <span class="hljs-attr">components</span>: {
    <span class="hljs-title class_">Image</span>,
  },
};
&lt;script&gt;
</span></code></pre><p>这是因为 &lt;image&gt; 标签是原生的 SVG 标签，Vue 不允许将原生标签名注册为组件名，使用 &lt;van-image&gt; 即可规避这个问题。</p></div>`,22),p=[l];function c(o,r){return a(),t("div",d,p)}const g=s(e,[["render",c]]);export{g as default};
